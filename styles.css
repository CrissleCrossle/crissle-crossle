@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css");


*, *::after, *::before {
  box-sizing: border-box;
  font-family: Arial;
}

* {
  touch-action: manipulation;
}

body {
  background-color: rgb(17, 17, 18);
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 0;
  padding: 1em;
  font-size: clamp(.5rem, 2.5vmin, 1.5rem);
  vertical-align: middle;
  height: 100%;
  overflow-y: hidden;
  justify-content: center;
}

#stats {
  justify-content: center;
}


.screen-popup {
  z-index: 100;
  visibility: hidden;
  display: flex;
  position: absolute;
  width: 50%;
  height: 70%;
  align-self: center;
  text-align: center;
  overflow-y: auto;
  background-color: rgb(17, 17, 18);
  border-radius: 0.5em;
  border: 0.2em solid white;
  color: white;
  padding: 2em;
  
}

#rules {
  visibility: hidden;
  width: 100%;
  height: 100%;
  background-color: rgb(17, 17, 18);
  border: none;
  justify-content: center;
}


.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: hsl(115, 29%, 43%);
  transition: .05s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: .05s;
}

input:checked + .slider {
  background-color: orangered;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

#top-bar {
  margin-top: 0;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  z-index: 10;
}

.menu-button {
  font-size: 3em;
  border: none;
  text-decoration: none;
  color: white;
}

#title {
  display: inline-grid;
  grid-template-columns: repeat(14, auto);
  text-align: center;
  gap: 0.25em;
  vertical-align: middle;
}

.keyboard {
  display: grid;
  grid-template-columns: repeat(20, minmax(auto, 1.25em));
  grid-auto-rows: 3em;
  gap: .25em;
  justify-content: center;
  align-self: center;
  position: fixed; 
  bottom:2%;
  width:100%;
}

.finished {
  background-color: rgba(17, 17, 18, 0.8);
  position:absolute;
  margin: auto;
  height: 100%;
  width:100%;
  display: flex;
}

#share {
  font-size: 2em;
  color: white;
  background-color: hsl(115, 29%, 43%);
  border-radius: 0.2em;
  margin: auto;
  padding: 0.3em;
}

.key {
  font-size: inherit;
  grid-column: span 2;
  border: none;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: hsl(
    var(--hue, 200),
    var(--saturation, 1%),
    calc(var(--lightness-offset, 0%) + var(--lightness, 51%))
  );
  color: white;
  fill: white;
  text-transform: uppercase;
  border-radius: .25em;
  cursor: pointer;
  user-select: none;
}

.key.large {
  grid-column: span 3;
}

.key > svg {
  width: 1.75em;
  height: 1.75em;
}

.key:hover, .key:focus {
  --lightness-offset: 10%;
}

.key.wrong {
  --lightness: 23%;
}

.key.wrong-location {
  --hue: 49;
  --saturation: 51%;
  --lightness: 47%;
}

.key.correct {
  --hue: 115;
  --saturation: 29%;
  --lightness: 43%;
}

.game-area {
  margin-top: auto;
  margin-bottom: auto;
}

.grid-container {
  text-align: center;
  vertical-align: middle;
}

.grid {
  display: inline-grid;
  grid-template-columns: auto auto auto auto auto;
  padding: 10px;
  text-align: center;
  gap: 0.25em;
  vertical-align: middle;
  margin-bottom: 20vh;

}

.help-grid {
  display: inline-grid;
  grid-template-columns: auto auto auto auto auto;
  padding: 10px;
  text-align: center;
  gap: 0.25em;
  vertical-align: middle;
  margin-bottom: 0vh;

}

.answer-box {
  display: grid;
  justify-content: center;
  align-content: center;
  flex-grow: 1;
  margin-bottom: 1em;
  margin-left: -0%;
  grid-template-columns: auto auto auto auto auto;
  padding: 10px;
  text-align: center;
  gap: 0.25em;
}


.tile {
  font-size: 1.5em;
  line-height: 1.75em;
  color: white;
  border: .05em solid hsl(240, 2%, 23%);
  width: 1.75em;
  height: 1.75em;
  text-transform: uppercase;
  text-align: center;
  padding: 1%;
  vertical-align: middle;
  font-weight: bold;
  user-select: none;
  transition: transform 100ms linear;
}

.tile[data-state="active"] {
  border-color: hsl(200, 1%, 34%);
}

.tile[data-state="wrong"] {
  border: none;
  background-color: hsl(240, 2%, 23%);
}

.tile[data-state="wrong-location"] {
  border: none;
  background-color: hsl(49, 51%, 47%);
}

.tile[data-state="correct"] {
  border: none;
  background-color: hsl(115, 29%, 43%);
}

.tile[data-state="interfere"] {
  border: none;
  background-color: hsl(215, 70%, 43%);
}



/* .help-tile {
  font-size: 1.5em;
  line-height: 1.75em;
  color: white;
  border: .05em solid hsl(240, 2%, 23%);
  width: 1.75em;
  height: 1.75em;
  text-transform: uppercase;
  text-align: center;
  padding: 1%;
  vertical-align: middle;
  font-weight: bold;
  user-select: none;
  transition: transform 100ms linear;
}

.help-tile[data-state="active"] {
  border-color: hsl(200, 1%, 34%);
}

.help-tile[data-state="wrong"] {
  border: none;
  background-color: hsl(240, 2%, 23%);
}

.help-tile[data-state="wrong-location"] {
  border: none;
  background-color: hsl(49, 51%, 47%);
}

.help-tile[data-state="correct"] {
  border: none;
  background-color: hsl(115, 29%, 43%);
}

.help-tile[data-state="interfere"] {
  border: none;
  background-color: hsl(215, 70%, 43%);
} */

.switched[data-state="interfere"] {
  background-color: violet;
}

.switched[data-state="correct"] {
  background-color: orangered;
}

.switched[data-state="wrong-location"] {
  background-color: aquamarine;
}

.tile.shake {
  animation: shake 250ms ease-in-out;
}

.tile.dance {
  animation: dance 500ms ease-in-out;
}

.tile.flip {
  transform: rotateX(90deg);
}

@keyframes shake {
  10% {
    transform: translateX(-5%);
  }

  30% {
    transform: translateX(5%);
  }

  50% {
    transform: translateX(-7.5%);
  }

  70% {
    transform: translateX(7.5%);
  }

  90% {
    transform: translateX(-5%);
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes dance {
  20% {
    transform: translateY(-50%);
  }  

  40% {
    transform: translateY(5%);
  }  

  60% {
    transform: translateY(-25%);
  }  

  80% {
    transform: translateY(2.5%);
  }  

  90% {
    transform: translateY(-5%);
  }  

  100% {
    transform: translateY(0);
  }
}


.alert-container {
  position: fixed;
  top: 10vh;
  left: 50vw;
  transform: translateX(-50%);
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.alert {
  pointer-events: none;
  background-color: hsl(204, 7%, 85%);
  padding: .75em;
  border-radius: .25em;
  opacity: 1;
  transition: opacity 500ms ease-in-out;
  margin-bottom: .5em;
}

.alert:last-child {
  margin-bottom: 0;
}

.alert.hide {
  opacity: 0;
}

.top-bar-spacing {
  padding-inline: 0.8em;
}

@media only screen and (max-width: 145vh) {
  .tile.title {
    font-size: 1em;
  }
  .screen-popup {
    width: 70%;
  }
  .top-bar-spacing {
    padding-inline: 0.5em;
  }
  .menu-button {
    font-size: 2em;
  }
  }


@media only screen and (max-width: 150vh) {
  .tile.title {
    font-size: 1em;
  }
  }
  

@media only screen and (max-width: 130vh) {
  .tile.title {
    font-size: 0.75em;
  }
  }

@media only screen and (max-width: 110vh) {
  .keyboard {
    width: 100%;
    grid-row-gap: .75em;
    margin-bottom: 1em;
  }
  .key {
    padding: 1.75em;
  }
}

@media only screen and (max-width: 80vh) {
    .keyboard {
      grid-row-gap: 2.3em;
    }
    .key {
      padding-right: 1.75em;
      padding-left: 1.75em;
      padding-top: 2.5em;
      padding-bottom: 2.5em;
  
    }
}